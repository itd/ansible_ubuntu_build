---
# tasks file for laptop-ubu

- name: "bash stuff"
  copy:
    src: '{{item}}'
    dest: '/home/{{local_user}}/{{item}}'
    owner: "{{local_user}}"
    group: "{{local_user}}"
    mode: '0640'
  with_items:
    - .bashrc
    - .bash_aliases
  tags:
    - localfiles

- name: "Add user kurt to sudo"
  lineinfile:
    path: "/etc/sudoers.d/{{local_user}}"
    line: '{{local_user}} ALL=(ALL) NOPASSWD: ALL'
    state: present
    mode: 0440
    create: yes
    validate: 'visudo -cf %s'


- name: Set includedir in sudoers
  lineinfile:
    dest: /etc/sudoers
    line: "#includedir /etc/sudoers.d"
    state: present
    validate: "/usr/sbin/visudo -cf %s"

- name: "add PPAs"
  apt_repository:
    repo: '{{ item }}'
    state: present
    update_cache: True
    validate_certs: False
  with_items:
    - ppa:stebbins/handbrake-releases
    - ppa:audio-recorder/ppa


- name: "Add apt_key  - prep for enpass install"
  apt_key:
    url: https://apt.enpass.io/keys/enpass-linux.key
    state: present

- name: "Add enpass repo"
  copy:
    src: '{{item}}'
    dest: '/etc/apt/sources.list.d/'
    owner: "root"
    group: "root"
    mode: '0644'
  with_items:
    - enpass.list
    - vscode.list

- name: "get vscode key"
  shell: "wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -"
  tags:
    - vscode

- name: "Ansible install enpass"
  apt:
    state: latest
    name: "{{ pkgs }}"
    update_cache: yes
  vars:
    pkgs:
      - enpass

- name: "Things to ensure do not exist"
  apt:
    state: absent
    name: "{{ xpkgs }}"
  vars:
    xpkgs:
      - thunderbird

- name: "install utilities"
  apt:
    state: latest
    name: "{{ pkgs }}"
  tags:
    - apps
  vars:
    pkgs:
      - apt-transport-https
      - build-essential
      - diodon
      - exfat-fuse
      - exfat-utils
      - git
      - gnome-tweak-tool
      - gnome-tweaks
      - gparted
      - hexchat
      - hexchat-indicator
      - jq
      - libavcodec-dev
      - libc6-dev
      - libexpat1-dev
      - libffi-dev
      - libgl1-mesa-dev
      - libssl-dev
      - lshw
      - lsof
      - mlocate
      - net-tools
      - openconnect
      - openssh-server
      - partimage
      - pkg-config
      - python3-dev
      - python3-pip
      - python3-virtualenv
      - qtbase5-dev
      - software-properties-common
      - terminator
      - ubuntu-restricted-extras
      - vim
      - wget
      - xfsdump
      - xfsprogs
      - xfsprogs
      - zlib1g-dev


- name: "install apps and utils"
  apt:
    state: latest
    name: "{{ pkgs }}"
  vars:
    pkgs:
      - chromium-codecs-ffmpeg-extra
      - chromium-codecs-ffmpeg
      - chromium-browser
      - enpass
      - code


- name: "install handbrake"
  apt:
    state: latest
    name: "{{ pkgs }}"
  vars:
    pkgs:
      - handbrake-gtk
      - handbrake-cli
      - audio-recorder
      - libdvd-pkg


- name: "install hspd-12 packages"
  apt:
    state: latest
    name: "{{ pkgs }}"
  vars:
    pkgs:
      - opensc
      - libpcsclite1
      - pcscd
      - pcsc-tools
  tags:
    - hspd12


- name: "install media stuff"
  apt:
    state: latest
    name: "{{ pkgs }}"
  tags: 
    - apps
  vars:
    pkgs:
      - audio-recorder
      - ubuntu-restricted-extras
      - libavcodec-dev
      - libgl1-mesa-dev
      - qtbase5-dev
      - zlib1g-dev
      - enpass
      - gstreamer1.0-plugins-bad
      - gstreamer1.0-plugins-ugly
      - smplayer
      - mplayer-gui
      - vlc
      - gparted

- name: "install media stuff"
  apt:
    state: latest
    name: "{{ pkgs }}"
  when:
    ansible_distribution_major_version <= "18"
  tags:
    - apps
  vars:
    pkgs:
      - libdvdnav4
      - libdvdread4

- name: "Setup/reconfigure libdvd-pkg"
  debconf:
    name: libdvd-pkg
    #question: libdvd-pkg/build
    #value: 'true'
  tags:
    - libdvd
# Did you try running sudo /usr/share/doc/libdvdread4/install-css.sh ?
# not in 20.04
# ???  https://fluendo.com/en/oneplay/# ???

#    steam

# Install a snap with classic confinement
- name: "Install snap with option --classic"
  become: yes
  # become_user: "{{ lookup('env', 'USR') | default('nobody', True) }}"
  community.general.snap:
    name: "{{pkgs}}"
    classic: yes
  tags:
    - snaps
  when:
    - ansible_facts['distribution_major_version'] | int >= 20
  vars:
    pkgs:
      - aws-cli
      - code
      - espanso
      - mkpass
      - sublime-text
      - teams-for-linux
      - pycharm-community


#- name: "install packer"
#  https://releases.hashicorp.com/packer/1.6.6/packer_1.6.6_linux_amd64.zip

#  https://download2.ebz.epson.net/imagescanv3/ubuntu/lts1/deb/x64/imagescan-bundle-ubuntu-20.04-3.63.0.x64.deb.tar.gz

# install modulo
# # Make sure to have the $HOME/opt directory
#mkdir -p $HOME/opt
#
# Download the latest Modulo AppImage in the $HOME/opt
#wget https://github.com/federico-terzi/modulo/releases/latest/download/modulo-x86_64.AppImage -O $HOME/opt/modulo.AppImage
#
# Make it executable:
#chmod u+x $HOME/opt/modulo.AppImage
#
# Create a link to make modulo available as "modulo"
#sudo ln -s $HOME/opt/modulo.AppImage /usr/bin/modulo

#  dnsmasq resolvconf


