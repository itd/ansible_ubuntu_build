---
# tasks file for laptop-ubu

#- name: "grub tweaks"
#  
  # GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
  # https://cdn.akamai.steamstatic.com/client/installer/steam.deb
  # wget https://launchpad.net/~kxstudio-debian/+archive/kxstudio/+files/kxstudio-repos_10.0.3_all.deb

- name: "register apps list"
  set_fact:
    ubu_apps: '{{u18_apps}}'

- name: "register apps list"
  set_fact:
    ubu_apps: '{{u18_apps + u20_apps}}'
  when: ansible_distribution_major_version == '20'

- name: "install essential build utils"
  apt:
    state: latest
    name: "{{ ubu_apps }}"
  tags:
    - apps
    - essentials
  # vars:
  #   pkgs:
  #     - apt-transport-https
  #     - build-essential
  #     - gpgv
  #     - python-is-python3
  #     - python3-apt
  #     - vim


- name: 'Create the /opt/tmp directory if it does not exist'
  ansible.builtin.file:
    path: /opt/tmp
    state: directory
    owner: "{{local_user}}"
    group: "{{local_user}}"
    mode: '0755'

- name: 'Perms on /opt/tmp'
  ansible.builtin.file:
    path: /opt
    recurse: yes
    owner: "{{local_user}}"
    group: "{{local_user}}"

   
- name: "bash stuff"
  copy:
    src: '{{item}}'
    dest: '/home/{{local_user}}/{{item}}'
    owner: "{{local_user}}"
    group: "{{local_user}}"
    mode: '0640'
  with_items:
    - .bashrc
    - .bash_aliases
  tags:
    - localfiles

- name: "Add user kurt to sudo"
  lineinfile:
    path: "/etc/sudoers.d/{{local_user}}"
    line: '{{local_user}} ALL=(ALL) NOPASSWD: ALL'
    state: present
    mode: 0440
    create: yes
    validate: 'visudo -cf %s'


- name: Set includedir in sudoers
  lineinfile:
    dest: /etc/sudoers
    line: "#includedir /etc/sudoers.d"
    state: present
    validate: "/usr/sbin/visudo -cf %s"

- name: "add PPAs"
  apt_repository:
    repo: '{{ item }}'
    state: present
    update_cache: True
    validate_certs: False
  with_items:
    - ppa:stebbins/handbrake-releases
    - ppa:audio-recorder/ppa

- name: "include makemvk"
  include_tasks:
    file: makemkv.yml
    apply:
      tags: do_makemkv
  tags: 
    - do_makemkv
# - name: 'Perms on /opt/tmp'
#   ansible.builtin.file:
#     path: /opt/tmp
#     recurse: yes
#     owner: "{{local_user}}"
#     group: "{{local_user}}"


# - name: "Install kxstudio meta package from URL."
#   apt:
#     deb: https://launchpad.net/~kxstudio-debian/+archive/kxstudio/+files/kxstudio-repos_10.0.3_all.deb
#   tags:
#     - kxstudio
#     - audioprod

- name: "Add apt_key  - prep for enpass install"
  apt_key:
    url: https://apt.enpass.io/keys/enpass-linux.key
    state: present

- name: "Add external repos"
  copy:
    src: '{{item}}'
    dest: '/etc/apt/sources.list.d/'
    owner: "root"
    group: "root"
    mode: '0644'
  with_items:
    - enpass.list
    - vscode.list

- name: "get vscode key"
  shell: "wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -"
  tags:
    - vscode

- name: "update all the packages first."
  apt:
    name: "*"
    update_cache: yes

- name: "Ansible install enpass"
  apt:
    state: latest
    name: "{{ pkgs }}"
  vars:
    pkgs:
      - enpass

- name: "Things to ensure do not exist"
  apt:
    state: absent
    name: "{{ xpkgs }}"
  vars:
    xpkgs:
      - thunderbird

- name: "install utilities"
  apt:
    state: latest
    name: "{{ pkgs }}"
  tags:
    - apps
    - kshell
  vars:
    pkgs:
      - copyq
      - exfat-fuse
      - exfat-utils
      - gconf2
      - git
      - gnome-tweak-tool
      - gnome-tweaks
      - gparted
      - hexchat
      - hexchat-indicator
      - jq
      - libavcodec-dev
      - libc6-dev
      - libexpat1-dev
      - libffi-dev
      - libgl1-mesa-dev
      - libssl-dev
      - lm-sensors                # computer internal sensor support
      - p7zip-full                # support extracting a wider variety of archives than supported by default
      #- code                      # VS Code
      - curl                      # download files from the internet
      - wget                      # download files from the internet
      - gnupg2                    # secure communications toolkit
      - powertop                 # Intel power management utility
      - whois                     # WHOIS directory client
      - net-tools                 # various networking-related tools
      - iputils-ping              # ping hosts via ICMP
      - rng-tools                 # TRNG interface
      - traceroute                # network path tracer
      - jq                        # JSON processing with filters
      - miller                    # CSV/TSV/JSON processing with filters
      - exif                      # inspect EXIF data inside photos
      - restic                    # incremental encrypted backups
      - rclone                    # file synchronization utility for various cloud providers
      - rsync                     # file synchronization utility for synchronization between computers
      - youtube-dl                # video site downloader
      - libheif-examples          # programs for working with the HEIF image format (now the default output of iPhone cameras)
      - jupyter-notebook          # Jupyter interactive notebook with Python 3 support
      - default-jdk               # default Java compiler
      - moreutils                 # useful extra command-line tools
      - w3m                       # text-based web browser
      - expect                    # command line automation
      - shellcheck                # shell script linter
      - xdotool                   # programmatically send keystrokes and other input events
      - lshw
      - lsof
      - mlocate
      - net-tools
      - openconnect
      - partimage
      - pkg-config
      - python3-dev
      - python3-pip
      - python3-psutil
      - python3-virtualenv
      - qtbase5-dev
      - software-properties-common
      - terminator
      - ubuntu-restricted-extras
      - unzip
      - wget
      - xclip
      - xfsdump
      - xfsprogs
      - xfsprogs
      - zlib1g-dev


- name: "install apps and utils"
  apt:
    state: latest
    name: "{{ pkgs }}"
  tags:
    - apps
  vars:
    pkgs:
      - chromium-browser              # web browser
      - chromium-codecs-ffmpeg-extra  #
      - chromium-codecs-ffmpeg        #
      - enpass                        # password manager
      - bleachbit                     # computer cleaner
      - copyq                         # powerful clipboard manager utility
      - create-resources              # additional resources for GIMP/Blender/Inkscape
      - dconf-editor                  # settings editor
      - easytag                       # audio file tag editor
      - filezilla                     # file transfer client
      - gparted                       # partition editor
      - libreoffice                   # office suite
      - meld                          # diff viewer/editor
      - nmap                          # Network scanner
      - pdfshuffler                   # PDF page-level manipulation software
      - qalculate                     # powerful calculator utility
      - redshift-gtk                  # screen color temperature changer
      - simplescreenrecorder          # screen recorder
      - wireshark                     # network traffic analyser
      - xournal                       # document editor/PDF annotator


      # - fritzing                      # simple circuit designer
      # - fritzing-parts                # parts configuration for simple circuit designer      
      # - kicad                         # electronics CAD software
      # - kicad-doc-en                  # electronics CAD software documentation
      # - meshlab                       # triangular mesh editor and toolkit

- name: "install handbrake"
  apt:
    state: latest
    name: "{{ pkgs }}"
  vars:
    pkgs:
      - handbrake-gtk
      - handbrake-cli


- name: "install hspd-12 packages"
  apt:
    state: latest
    name: "{{ pkgs }}"
  vars:
    pkgs:
      - opensc
      - libpcsclite1
      - pcscd
      - pcsc-tools
  tags:
    - hspd12

- name: "media stuff: jackd might need to be installed first"
  apt:
    state: latest
    name: "{{pkgs}}"
  tags:
    - kxstudio
    - audioprod
  vars:
    pkgs:
    - jackd2 
    - jack-tools 
    - jack-keyboard

- name: "install media stuff"
  apt:
    state: latest
    name: "{{ pkgs }}"
  tags: 
    - apps
    - audioprod
  vars:
    pkgs:
      - audacity                      # simple audio editor
      - audio-recorder
      - clementine                    # music player/manager
      - gimp                          # image editor
      - gimp-help-en                  # image editor documentation
      - gstreamer1.0-plugins-bad
      - gstreamer1.0-plugins-ugly
      - inkscape                      # vector graphics editor
      - kdenlive                      # video editor
      - krita                         # painting/visual art software
      - lame                          # MP3 encoder and utilities
      - libavcodec-dev
      - libdvd-pkg
      - libgl1-mesa-dev
      - mplayer-gui
      - pavucontrol                   # Pulseaudio application-level volume control
      - qtbase5-dev
      - sane-util                     # scanner utils
      - smplayer                      # mplayer gui media util
      - sound-juicer
      - sox                           # utilities for working with audio
      - ubuntu-restricted-extras
      - vlc
      - xsane                         # scanner utils
      - zlib1g-dev

- name: "install media stuff"
  apt:
    state: latest
    name: "{{ pkgs }}"
  when:
    ansible_distribution_major_version <= "18"
  tags:
    - apps
    - kxstudion
  vars:
    pkgs:
      - libdvdnav4
      - libdvdread4
      - cadence         # "Utils for jackd"
      - cadence-data
      - cadence-tools
      - carla 
      
- name: "Setup/reconfigure libdvd-pkg"
  debconf:
    name: libdvd-pkg
    #question: libdvd-pkg/build
    #value: 'true'
  tags:
    - libdvd
# Did you try running sudo /usr/share/doc/libdvdread4/install-css.sh ?
# not in 20.04
# ???  https://fluendo.com/en/oneplay/# ???

#    steam

# Install a snap with classic confinement
- name: "Install snap with option --classic"
  become: yes
  # become_user: "{{ lookup('env', 'USR') | default('nobody', True) }}"
  community.general.snap:
    name: "{{pkgs}}"
    classic: yes
  tags:
    - snaps
  when:
    - ansible_facts['distribution_major_version'] | int >= 20
  vars:
    pkgs:
      - aws-cli
      # - code
      - espanso
      - mkpass
      - sublime-text
      - teams-for-linux
      - pycharm-community


# - name: "Install packer from URL."
#   ansible.builtin.unarchive:
#     src: 'https://releases.hashicorp.com/packer/{{packer_ver}}/packer_{{packer_ver}}_linux_amd64.zip'
#     dest: '/usr/local/bin/'
#     remote_src: yes
#   tags:
#     - packer

# - name: "MAP CAPS LOCK TO CTRL"
#   become: yes
#   become_user: "{{local_user}}" 
#   command: gsettings set org.gnome.desktop.input-sources xkb-options "['caps:ctrl_modifier']"
#   tags:
#     - kshell

- name: set xkb options
  become: yes
  become_user: "{{local_user}}" 
  dconf:
    key: "/org/gnome/desktop/input-sources/xkb-options"
    value: "['caps:ctrl_modifier']"
  tags:
    - kshell

- name: "adding `local_user` to groups"
  user:
    name: "{{ local_user }}"
    groups: "{{ item }}"
    append: yes
  tags:
   - do_group
  loop:
    - audio
    - scanner
    - saned

- name: 'get the bash-git-promot checkout'
  git:
    repo: 'https://github.com/magicmonty/bash-git-prompt.git'
    dest: '/home/{{ local_user }}/.bash-git-prompt'



- name: "Check if File exists or not"
  stat:
    path: /etc/sysctl.d/fs_inotify_max_user_watches.conf
  register: inotify_status
  tags:
    - perf_tweaks
    - vscode_tweaks

- debug:  var=inotify_status.stat.exists
  tags:
    - perf_tweaks
    - vscode_tweaks


- name: "inotify watcher increase for vscode"
  copy:
    content: "max_user_watches=524288"
    dest: /etc/sysctl.d/fs_inotify_max_user_watches.conf
  when: inotify_status.stat.exists == false
  tags:
    - vscode_tweaks
    - perf_tweaks

- name: "load the kernel tweaks for vscode"
  command: sysctl -p

- name: "Last things: Clean cruft from the system."
  apt:
    autoclean: yes


# - name: "get python" 
#   shell: "echo $(ls /usr/bin/pyth* | grep -e 'python3\\.[0-9]$' | sort | tail -1)"
#   register: PYVER
#   become: yes
#   tags:
#     - foobar

# # $ sudo ln -s /usr/local/$(ls /usr/bin/ | grep -e "python3\.[0-9]$" | sort | tail -1 ) /usr/local/python3

# - stat: path=/usr/bin/python3
#   register: p
#   tags:
#     - foobar

# - debug: 
#     msg: |
#       "x
#       x
#       x
#       x
#       >>>>>>    {{ PYVER.stdout }} exists
#       x
#       x
#       x
#       x"

#   #when: p.stat.exists
#   tags:
#     - foobar


#  https://download2.ebz.epson.net/imagescanv3/ubuntu/lts1/deb/x64/imagescan-bundle-ubuntu-20.04-3.63.0.x64.deb.tar.gz

# install modulo
# # Make sure to have the $HOME/opt directory
#mkdir -p $HOME/opt
#
# Download the latest Modulo AppImage in the $HOME/opt
#wget https://github.com/federico-terzi/modulo/releases/latest/download/modulo-x86_64.AppImage -O $HOME/opt/modulo.AppImage
#
# Make it executable:
#chmod u+x $HOME/opt/modulo.AppImage
#
# Create a link to make modulo available as "modulo"
#sudo ln -s $HOME/opt/modulo.AppImage /usr/bin/modulo

#  dnsmasq resolvconf

# https://releases.hashicorp.com/packer/1.6.6/packer_1.6.6_linux_amd64.zip
